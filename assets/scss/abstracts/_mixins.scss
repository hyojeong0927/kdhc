/* Mixin
========================================================================== */

// mixin flex
// @include flex($flexDirection, '$justifyContent', '$alignItems', $gap)
// @include flex(true, 'end', 'start', 10px); 

@mixin flex(
        $flexDirection: true, 
        $justifyContent:'start',
        $alignItems: 'start',
        $gap: 0px,
    ) {
    display: flex;

    @if $flexDirection == true {
        flex-direction: row;
    } @else {
        flex-direction: column;
    }
    @if $justifyContent == 'start' {
        justify-content: flex-start;
    } @else if $justifyContent == 'center' {
        justify-content: center;
    } @else if $justifyContent == 'end' {
        justify-content: flex-end;
    } @else if $justifyContent == 'around'{
        justify-content: space-around;
    } @else if $justifyContent == 'between'{
        justify-content: space-between;
    } @else if $justifyContent == 'evenly'{
        justify-content: space-evenly;
    } @else {
      justify-content: flex-start;
    }

    @if $alignItems == 'start' {
        align-items: flex-start;
    } @else if $alignItems == 'center' {
        align-items: center;
    } @else if $alignItems == 'end' {
        align-items: flex-end;
    } @else {
        align-items: normal;
    }
    gap: $gap;
}
// mixin grid
// @include grid($columns: repeat(3, 1fr), $gap: 1rem);
// @include grid(
//   $columns: repeat(auto-fill, minmax(200px, 1fr)),
//   $rows: auto,
//   $gap: 2rem,
//   $justifyItems: center,
//   $alignItems: start
// );
// @include grid();
@mixin grid(
    $columns: auto,
    $rows: auto,
    $gap: 0,
    $justifyItems: stretch,
    $alignItems: stretch
) {
    display: grid;
    grid-template-columns: $columns;
    grid-template-rows: $rows;
    gap: $gap;
    justify-items: $justifyItems;
    align-items: $alignItems;
}

// Box
// @include box($type, $header, $content, $footer, $round);
// @include box(.box-type-02, true, true, false, 16px); 

@mixin box (
  $type: '.#{$type}',
  $header: false,
  $content: true,
  $footer: false,
  $round,
  ) {
    @if $type == '.box-row-01' {
      @if $header == true {
        .box-header {
          border: none;
        }
      } @else {
        .box-header {
          display: none;
        }
      }
      @if $content == true {
        .box-content {
          border: none;
        }
      } @else {
        .box-content {
          display: none;
        }
      }
      @if $footer == true {
        .box-footer {
          border: none;
        }
      } @else {
        .box-footer {
          border-radius: $border-radius;
        } 
      }
      @if $round == true {
        border-radius: $round;
      }
    }
    // box default value
    display: block;
    margin: 0 0 20px;
    padding: 0 0 20px;
}
// position
@mixin postion-center($type: absolute) {
  @if ($type == fixed or $type == absolute) {
    position: $type;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

// :before, :after
// $before($before, $absolute, 2px, 3px, 0px, 0px);
// before(true, true, 2px, 3px, 0px, 0px);
@mixin before (
    $before: true,
    $absolute: true,
    $top: 0px,
    $right: 0px,
    $bottom: 0px,
    $left: 0px, 
    ) {
        @if $before == true {
            &::before {
                content:'';

                @if $absolute == true {
                    position: absolute;
                    top: $top;
                    right: $right;
                    bottom: $bottom;
                    left: $left;
                } @else {
                    display: inline-block;
                }
            }
        } @else {
            &::after {
                content: '';

                @if $absolute == true {
                    position: absolute;
                    top: $top;
                    right: $right;
                    bottom: $bottom;
                    left: $left;
                } @else {
                    display: inline-block;
                }
            }
        }
}
// icon
// @include icon($icon-name, $width, $height, $url)
@mixin icon (
  $icon-name,
  $width,
  $height,
  $url,
) {
  display: inline-block;
  padding: 0;
  background: {
    size: 100%;
    position: center;
    repeat: no-repeat;
  }
  box-sizing: content-box;
  &.#{$icon-name} {
    width: $width;
    height: $height;
    background-image: url($url);
  }
}

// scroll
@mixin scroll-y {
    ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
    }
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb {
        background: #888; 
        border-radius: 10px;
    }
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
}

@mixin scroll-x {
    @include scroll-y;
    ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
    }
}

// clearfix
@mixin clearfix() {
    &::after {
      display: block;
      clear: both;
      content: "";
    }
}

// ellipsis
@mixin ellipsis($lines: 1) {
    @if ($lines==1) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    } @else {
        display: -webkit-box;
        overflow: hidden;
        text-overflow: ellipsis;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}

// font
@mixin font-style($size, $weight, $line-height) {
    font-size: rem($size);
    font-weight: $weight;
    letter-spacing: rem(-0.48px);
    line-height: $line-height;
}
// 웹접근성 숨김 처리
@mixin hidden {
    visibility: hidden;
    width: 1px;
    height: 1px;
}